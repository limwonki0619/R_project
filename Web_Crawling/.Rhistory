install.packages("ggplot2")
install.packages("dplyr")
install.packages("reshape")
install.packages("stringr")
install.packages("car")
library(rvest)
library(dplyr)
base_url <- "http://auto.hankyung.com/autonews?page="
url <- NULL
for (i in 1:10) {
url <- c(url,paste0(base_url,i)) # page별 url
}
real_urls <- NULL
lis <- NULL
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_nodes(".list_basic") %>% html_nodes("a")) %>% html_attr("href")
}
hk_url <- "http://search.hankyung.com/apps.frm/search.news?query=%EC%A0%84%EA%B8%B0%EC%9E%90%EB%8F%99%EC%B0%A8&page=" # 쿼리지정 가능
hk_urls <- NULL
for (x in 1:5){
hk_urls[x] <- paste(hk_url, as.character(x),sep = "",encoding="utf-8")
}
urls <- NULL
for(url in hk_urls){
html <- read_html(url)
urls <- c(urls, html %>% html_nodes(".article") %>% html_nodes(".txt_wrap") %>% html_nodes("a") %>% html_attr("href")%>% unique())
}
urls
url
hk_urls
str(hk_urls)
base_url <- "http://auto.hankyung.com/autonews?page="
url <- NULL
for (i in 1:10) {
url[i] <- url, paste0(base_url,i) # page별 url
}
base_url <- "http://auto.hankyung.com/autonews?page="
url <- NULL
for (i in 1:10) {
url[i] <- paste0(base_url,i) # page별 url
}
url
real_urls <- NULL
lis <- NULL
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_nodes(".list_basic") %>% html_nodes("a")) %>% html_attr("href")
}
html
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_nodes(".wrap_cont") %>% html_nodes(".list_basic") %>% html_nodes("a")) %>% html_attr("href")
}
real_urls <- NULL
real_urls
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_nodes(".wrap_cont") %>% html_nodes(".list_basic") %>% html_nodes("a")) %>% html_attr("href")
}
html
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_nodes(".wrap_cont"))
}
real_urls <- NULL
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_node(".wrap_cont")) %>% html_nodes("li")
}
base_url <- "http://auto.hankyung.com/autonews?page="
url <- NULL
for (i in 1:10) {
url[i] <- paste0(base_url,i,encoding="utf-8") # page별 url
}
real_urls <- NULL
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_node(".wrap_cont")) %>% html_nodes("li")
}
base_url <- "http://auto.hankyung.com/autonews?page="
url <- NULL
for (i in 1:10) {
url[i] <- paste0(base_url,as.character(i),encoding="utf-8") # page별 url
}
url
real_urls <- NULL
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_node(".wrap_cont")) %>% html_nodes("li")
}
base_url <- "http://auto.hankyung.com/autoreview?page="
url <- NULL
for (i in 1:10) {
url[i] <- paste0(base_url,i) # page별 url
}
real_urls <- NULL
for (urls in url) {
html <- read_html(url)
real_urls <- c(real_urls, html %>% html_node(".wrap_cont")) %>% html_nodes()
}
real_urls <- NULL
for (urls in url) {
html <- read_html(url)
}
for (urls in url) {
html <- read_html(url)
}
real_urls <- NULL
for (urls in url) {
html <- read_html(url, encoding = "utf-8")
}
real_urls <- NULL
for (urls in url) {
html <- read_html(url, encoding = "euc-kr")
}
real_urls <- NULL
for (urls in url) {
html <- read_html(urls)
real_urls <- html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_nodes("a") %>% html_attr("href")
}
real_urls <- NULL
for (urls in url) {
html <- read_html(urls)
real_urls <- c(real_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_nodes("a") %>% html_attr("href"))
}
real_urls
real_urls <- NULL
for (urls in url) {
html <- read_html(urls)
real_urls <- c(real_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
real_urls
real_urls <- NULL
real_urls
for (urls in url) {
html <- read_html(urls)
real_urls <- c(real_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
title <- NULL
contents <- NULL
date <- NULL
title <- NULL
contents <- NULL
date <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node("#articletxt") %>% html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
base_url <- "http://auto.hankyung.com/autoreview?page=" # 한국경제신문 자동차 시승기
page_url <- NULL
for (i in 1:10) {
page_url[i] <- paste0(base_url,i) # page별 url생성
}
each_urls <- NULL
for (urls in url) { # page 내 개별 기사 url생성
html <- read_html(urls)
each_urls <- c(each_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
each_urls
title <- NULL
contents <- NULL
date <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node("#articletxt") %>% html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
hk_cars_trial_ride <- data.frame(기사제목 = trim(title),
기사내용 = trim(contents),
기사작성날짜 = date)
trim <- function(x) gsub("^\\s+|\\s+$", "", x) # 정규식을 이용한 각종 html 찌꺼기 <\r><\n> 등등을 제거하는 함수
hk_cars_trial_ride <- data.frame(기사제목 = trim(title),
기사내용 = trim(contents),
기사작성날짜 = date)
base_url <- "http://auto.hankyung.com/autoreview?page=" # 한국경제신문 자동차 시승기
page_url <- NULL
for (i in 1:1) {
page_url[i] <- paste0(base_url,i) # page별 url생성
}
each_urls <- NULL
for (urls in url) { # page 내 개별 기사 url생성
html <- read_html(urls)
each_urls <- c(each_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
title <- NULL
contents <- NULL
date <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node("#articletxt") %>% html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
title <- NULL
contents <- NULL
date <- NULL
each_urls
base_url <- "http://auto.hankyung.com/autoreview?page=" # 한국경제신문 자동차 시승기
page_url <- NULL
for (i in 1:1) {
page_url[i] <- paste0(base_url,i) # page별 url생성
}
page_url
each_urls <- NULL
for (urls in url) { # page 내 개별 기사 url생성
html <- read_html(urls)
each_urls <- c(each_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
each_urls
each_urls <- NULL
for (urls in page_url) { # page 내 개별 기사 url생성
html <- read_html(urls)
each_urls <- c(each_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
each_urls
title <- NULL
contents <- NULL
date <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node("#articletxt") %>% html_nodes("br.paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_nodes("br.paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_node("#articletxt") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
hk_cars_trial_ride <- data.frame(기사제목 = trim(title),
기사내용 = trim(contents),
기사작성날짜 = date)
View(hk_cars_trial_ride)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
setwd("D:/limworkspace/R_project/Web_Crawling")
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
trim <- function(x) gsub("^\\s+|\\s+$|\\n|\\t", "", x) # 정규식을 이용한 각종 html 찌꺼기 <\r><\n> 등등을 제거하는 함수
hk_cars_trial_ride <- data.frame(기사제목 = trim(title),
기사내용 = trim(contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
library(stringr)
hk_cars_trial_ride <- data.frame(기사제목 = str_trim(title),
기사내용 = str_trim(contents),
기사작성날짜 = date)
hk_cars_trial_ride <- data.frame(기사제목 = str_trim(title),
기사내용 = str_trim(contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_node("#articletxt") %>% %>% html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_node("#articletxt") %>% %>% html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_node("#articletxt") %>%  html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
title <- NULL
contents <- NULL
date <- NULL
writer <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_node("#articletxt") %>%  html_nodes(".paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
hk_cars_trial_ride <- data.frame(기사제목 = str_trim(title),
기사내용 = str_trim(contents),
기사작성날짜 = date)
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_node("#articletxt") %>%  html_nodes("br.paragraph") %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
title <- NULL
contents <- NULL
date <- NULL
writer <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_nodes("#articletxt")  %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
hk_cars_trial_ride <- data.frame(기사제목 = str_trim(title),
기사내용 = str_trim(contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
each_urls
length(each_urls)
contents
trim <- function(x) gsub("^\\s+|\\s+$|\\t", "", x) # 정규식을 이용한 각종 html 찌꺼기 <\r><\n> 등등을 제거하는 함수
hk_cars_trial_ride <- data.frame(기사제목 = trim(title),
기사내용 = trim(contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사내용 = contents,
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
contents
trim <- function(x) gsub("^\\s+|\\s+$", "", x) # 정규식을 이용한 화이트 페이스 문자 제거하는 함수
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사내용 = gsub("\\s","",contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
str(contents)
contents
contents[1]
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사내용 = gsub("\\n","",contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
contents[2]
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사내용 = gsub("\\n|\\t","",contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사내용 = gsub("\\n+|\\t+","",contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사 url = each_urls,
기사내용 = gsub("[[:cntrl:]]","",contents),
기사작성날짜 = date)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사 url = each_urls,
기사내용 = gsub("[[:cntrl:]]","",contents),
기사작성날짜 = date)
each_urls
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사 url = each_urls,
기사내용 = gsub("[[:cntrl:]]","", contents),
기사작성날짜 = date)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = gsub("[[:cntrl:]]","", contents),
기사작성날짜 = date)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = gsub("[[:cntrl:]]","", contents),
기사작성날짜 = date)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
contents[2]
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = gsub("\\n+|\\t+|\\r+","", contents),
기사작성날짜 = date)
View(hk_cars_trial_ride)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = gsub("\\W","", contents),
기사작성날짜 = date)
View(hk_cars_trial_ride)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = gsub("\\s+","", contents),
기사작성날짜 = date)
View(hk_cars_trial_ride)
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = gsub("^\\s+|\\s+$","", contents),
기사작성날짜 = date)
View(hk_cars_trial_ride)
trim <- function(x) gsub("^\\s+|\\s+$", "", x) # 정규식을 이용한 화이트 페이스 문자 제거하는 함수
hk_cars_trial_ride <- data.frame(기사제목 = title,
기사url = each_urls,
기사내용 = trim(contents),
기사작성날짜 = date)
View(hk_cars_trial_ride)
write.csv(hk_cars_trial_ride, file="한국경제신문_자동차_시승기.csv", row.names=F)
View(hk_cars_trial_ride)
install.packages("xlsx")
library(xlsx)
write.xlsx(hk_cars_trial_ride,file="한국경제신문_자동차_시승기.xlsx", header=T )
write.xlsx(hk_cars_trial_ride,file="한국경제신문_자동차_시승기.xlsx")
write.xlsx(hk_cars_trial_ride,file="한국경제신문_자동차_시승기.xlsx", row.names=F)
write.xlsx(hk_cars_trial_ride,file="한국경제신문_자동차_시승기.xlsx", row.names=F)
base_url <- "http://auto.hankyung.com/autoreview?page=" # 한국경제신문 자동차 시승기
page_url <- NULL
for (i in 1:2) { # 페이지당 기사가 20-개, 테스트가 가능한 정도만 크롤링
page_url[i] <- paste0(base_url,i) # page별 url생성
}
each_urls <- NULL
for (urls in page_url) { # page 내 개별 기사 url생성
html <- read_html(urls)
each_urls <- c(each_urls, html %>% html_node(".inner_list") %>% html_nodes("li") %>% html_node("a") %>% html_attr("href"))
}
title <- NULL
contents <- NULL
date <- NULL
for (real_urls in each_urls) {
html <- read_html(real_urls)
title <- c(title, html %>% html_node(".article_top") %>% html_node(".title") %>% html_text())
contents <- c(contents, html %>% html_node(".wrap_article") %>% html_nodes("#articletxt")  %>% html_text())
date <- c(date, html %>% html_node(".article_top") %>% html_node(".date-published") %>% html_text())
}
